'use strict';

(function(window) {
  var datasetSelect;
  var visualizationSelect;
  var visualizationPreview;
  var form;

  function onReady() {
    datasetSelect = document.getElementById('widget_dataset');
    visualizationSelect = document.getElementById('widget_visualization');
    visualizationPreview = document.getElementById('widget-preview');

    if ( datasetSelect ) {
      datasetSelect.addEventListener("change", onDatasetChanged);
    }
    if ( visualizationSelect ) {
      visualizationSelect.addEventListener("change", onVisualizationChanged);
    }
  }

  function getDatasetVisualizations(datasetId) {
    var params = {
      app: 'prep',
      dataset: datasetId,
      default: true
    }
    return $.get('<%= ENV['RW_API_URL'] %>'+'/widgets', params);
  }

  function getVisualizationDetails(widgetId) {
    return $.get('<%= ENV['RW_API_URL'] %>'+'/widgets/'+ widgetId);
  }

  function updateVisualizations(data) {
    visualizationSelect.options.length = 0;
    visualizationSelect.options[visualizationSelect.options.length] = new Option('', '');
    for (var i = 0, optionsLenght = data.length; i < optionsLenght; i++) {
      var option = new Option(data[i].name, data[i].id);
      visualizationSelect.options[visualizationSelect.options.length] = option;
    }
  }

  function updateForm(data) {
    form = document.getElementById('widget_form');
    for (var i = 0, formLength=form.elements.length; i < formLength; i++) {
      var input = form.elements[i];
      switch (input.name) {
        case 'widget[title]':
          input.value = data.name;
          break;
        case 'widget[slug]':
          input.value = data.slug;
          break;
        case 'widget[summary]':
          input.value = data.description;
          break;
        case 'widget[data_url]':
          input.value = data.query_url;
          break;
        case 'widget[widget_config]':
          input.value = JSON.stringify(data.widget_config);
          break;
        default:
          break;
      }
    }
  }

  function setPreviewVisibility(show) {
    if (show) {
      visualizationPreview.style.display = 'block';
    } else {
      visualizationPreview.style.display = 'none';
    }
  }

  function setPreview(data) {
    console.log('previeing');
    var vegaObj = data.widget_config || {};

    vg.parse.spec(vegaObj, function(chart) {
      var chartVis = chart({
        el: visualizationPreview
      });

      chartVis.update();
    });
  }

  function onDatasetChanged(ev) {
    var target = ev.currentTarget;
    getDatasetVisualizations(target.options[target.selectedIndex].value)
      .done(function(data){
        updateVisualizations(data);
        setPreviewVisibility(false);
      })
  }

  function onVisualizationChanged(ev) {
    var target = ev.currentTarget;
    getVisualizationDetails(target.options[target.selectedIndex].value)
      .done(function(data){
        updateForm(data);
        setPreview(data);
        setPreviewVisibility(true)
      })
  }


  document.addEventListener('DOMContentLoaded', onReady);
})(window);
